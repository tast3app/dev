{"version":3,"sources":["components/RecipeList/images/spaghetti-bolognese.jpg","components/RecipeList/images/thai-green-curry.jpg","components/RecipeList/images/french-onion-soup.jpg","components/RecipeList/images/margherita-pizza.jpg","components/RecipeList/images/beef-broccoli.jpg","components/RecipeList/RecipeList.js","pages/Home/Home.js","components/RecipeDetail/RecipeDetail.js","pages/RecipePage/RecipePage.js","components/Admin/AdminAddRecipe.js","pages/Admin/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","recipes","id","uuidv4","title","image","SpeghettiBolognese","prepTime","cookTime","servings","difficulty","cuisine","ingredients","instructions","tags","ThaiGreenCurry","ClassicFrenchOnionSoup","HomemadeMargheritaPizza","BeefandBroccoliStirFry","Home","navigate","useNavigate","searchQuery","setSearchQuery","useState","handleSearch","words","split","matchingRecipe","find","recipe","some","word","tag","toLowerCase","React","createElement","className","onClick","handleGenerateMeal","allRecipes","randomId","Math","floor","random","length","Search","size","type","placeholder","value","onChange","e","target","onKeyDown","key","RecipeDetails","useParams","searchParams","useSearchParams","get","handleCloseButton","src","alt","map","index","includes","Clock","ChefHat","Utensils","ingredient","instruction","Share2","Heart","RecipePage","RecipeDetail","recipeId","cuisineOptions","difficultyOptions","measurementOptions","timeOptions","Array","from","_","i","servingOptions","IngredientItem","_ref2","onRemove","amount","unit","name","IngredientList","_ref3","onAdd","ingredientName","setIngredientName","ingredientAmount","setIngredientAmount","ingredientUnit","setIngredientUnit","handleKeyDown","option","InstructionItem","_ref4","Draggable","draggableId","provided","Object","assign","ref","innerRef","draggableProps","dragHandleProps","InstructionList","_ref5","onReorder","inputValue","setInputValue","handleAdd","trim","DragDropContext","onDragEnd","result","Droppable","droppableId","droppableProps","TagItem","_ref6","TagList","_ref7","AdminAddRecipe","_ref","onAddRecipe","setRecipe","handleChange","prevRecipe","[object Object]","isFormValid","onSubmit","preventDefault","readOnly","required","time","serving","filter","destination","items","reorderedItem","splice","source","disabled","AdminPage","setRecipes","newRecipe","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6WCmazBC,MAzZC,CACd,CACEC,GAAIC,eACJC,MAAO,sBACPC,MAAOC,IACPC,SAAU,UACVC,SAAU,UACVC,SAAU,EACVC,WAAY,OACZC,QAAS,UACTC,YAAa,CACX,iBACA,mBACA,0BACA,gCACA,0BACA,mBACA,yBACA,mBACA,uBACA,qBACA,2BACA,sCAEFC,aAAc,CACZ,iDACA,uEACA,yCACA,gEACA,+CACA,+CACA,8DACA,6CACA,mDAEFC,KAAM,CACJ,QACA,YACA,OACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,QACA,cACA,eACA,UACA,kBACA,cACA,mBACA,eACA,eACA,cACA,aACA,aACA,QACA,QACA,OACA,YACA,SACA,SACA,WACA,oBACA,cACA,cACA,WACA,aACA,aACA,UACA,YACA,mBACA,kBACA,UACA,UACA,cACA,SACA,SACA,UACA,aACA,WACA,eACA,OACA,QACA,UACA,cACA,cACA,oBACA,mBACA,oBACA,mBACA,eACA,sBAGJ,CACEZ,GAAIC,eACJC,MAAO,mBACPC,MAAOU,IACPR,SAAU,UACVC,SAAU,UACVC,SAAU,EACVC,WAAY,SACZC,QAAS,OACTC,YAAa,CACX,8BACA,sBACA,2BACA,yBACA,sBACA,kBACA,sBACA,sBACA,oBACA,4BAEFC,aAAc,CACZ,6DACA,gDACA,4CACA,yCACA,wCACA,iCACA,+BAEFC,KAAM,CACJ,OACA,eACA,QACA,cACA,QACA,YACA,eACA,YACA,UACA,UACA,OACA,OACA,SACA,OACA,kBACA,SACA,QACA,iBACA,eACA,cACA,eACA,UACA,aACA,cACA,aACA,QACA,aACA,MACA,SACA,OACA,WACA,cACA,SACA,SACA,eACA,qBACA,aACA,aACA,YACA,OACA,UACA,WACA,OACA,OACA,eACA,SACA,YACA,SACA,kBACA,UACA,aACA,UACA,YACA,qBAGJ,CACEZ,GAAIC,eACJC,MAAO,4BACPC,MAAOW,IACPT,SAAU,UACVC,SAAU,iBACVC,SAAU,EACVC,WAAY,SACZC,QAAS,SACTC,YAAa,CACX,gCACA,gBACA,mBACA,cACA,0BACA,oBACA,yBACA,aACA,uBACA,kBACA,yBACA,4BAEFC,aAAc,CACZ,8DACA,uEACA,mCACA,8CACA,sCACA,wBACA,wBACA,kCACA,oCACA,2CAEFC,KAAM,CACJ,SACA,iBACA,OACA,aACA,oBACA,eACA,cACA,OACA,OACA,SACA,SACA,oBACA,SACA,aACA,WACA,UACA,QACA,aACA,gBACA,kBACA,SACA,QACA,WACA,eACA,cACA,mBACA,eACA,cACA,aACA,aACA,QACA,WACA,OACA,QACA,UACA,aACA,UACA,YACA,mBACA,UACA,cACA,UACA,YAGJ,CACEZ,GAAIC,eACJC,MAAO,4BACPC,MAAOY,IACPV,SAAU,UACVC,SAAU,UACVC,SAAU,EACVC,WAAY,SACZC,QAAS,UACTC,YAAa,CACX,mBACA,4BACA,wBACA,qBACA,yBACA,iBAEFC,aAAc,CACZ,0DACA,sCACA,2CACA,wCACA,6BACA,qDACA,mDAEFC,KAAM,CACJ,QACA,mBACA,UACA,kBACA,WACA,cACA,eACA,oBACA,QACA,YACA,SACA,UACA,SACA,QACA,iBACA,eACA,cACA,aACA,cACA,eACA,cACA,aACA,QACA,aACA,UACA,aACA,WACA,OACA,QACA,UACA,oBACA,aACA,eACA,SACA,YACA,YACA,UACA,cACA,SACA,SACA,kBACA,YAGJ,CACEZ,GAAIC,eACJC,MAAO,6BACPC,MAAOa,IACPX,SAAU,UACVC,SAAU,UACVC,SAAU,EACVC,WAAY,OACZC,QAAS,UACTC,YAAa,CACX,2BACA,0BACA,mBACA,sBACA,oBACA,0BACA,wBACA,aACA,0BAEFC,aAAc,CACZ,wDACA,iDACA,0BACA,8BACA,wBACA,0BACA,gCACA,0BACA,mBAEFC,KAAM,CACJ,WACA,UACA,kBACA,OACA,WACA,YACA,YACA,eACA,aACA,SACA,SACA,aACA,SACA,QACA,iBACA,eACA,cACA,UACA,aACA,cACA,aACA,WACA,OACA,QACA,UACA,oBACA,MACA,UACA,YACA,SACA,QACA,YACA,SACA,kBACA,UACA,YACA,sBC7USK,MA3EFA,KACX,MAAMC,EAAWC,eACVC,EAAaC,GAAkBC,mBAAS,IAczCC,EAAeA,KACnB,MAAMC,EAAQJ,EAAYK,MAAM,KAG1BC,EAAiB3B,EAAQ4B,KAAKC,GAClCJ,EAAMK,KAAKC,GACTF,EAAOhB,KAAKiB,KAAKE,GAAOA,EAAIC,gBAAkBF,KAK9CJ,GACFR,cAAqBQ,EAAe1B,MAGtCqB,EAAe,KASjB,OACEY,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAQC,UAAU,eAChBF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SAAG,wCAGLD,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,UAAQC,UAAU,uBAAuBC,QA5CpBC,KACzB,MAAMC,EAAavC,EAGbwC,EADeD,EADDE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWK,SAE5B3C,GAC9BkB,cAAqBqB,OAuCqD,qCAKxEN,IAAAC,cAAA,UAAQC,UAAU,eAChBF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAACU,IAAM,CACLT,UAAU,cACVU,KAAM,GACNT,QAASb,IAEXU,IAAAC,cAAA,SACEY,KAAK,OACLC,YAAY,WACZC,MAAO5B,EACP6B,SApDkBC,IAC1B7B,EAAe6B,EAAEC,OAAOH,MAAMhB,gBAoDtBoB,UA/BaF,IACP,UAAVA,EAAEG,KACJ9B,KA8BMY,UAAU,WAEZF,IAAAC,cAAA,UAAQC,UAAU,kBAAiB,sECqD9BmB,MAzHf,WACE,MAAMtD,GAAEA,GAAOuD,cACTrC,EAAWC,eACVqC,GAAgBC,cACjBrC,EAAcoC,EAAaE,IAAI,UAG/B9B,EAAS7B,EAAQ4B,KAAMC,GAAWA,EAAO5B,KAAOA,GAGtD,OAAK4B,EAgCHK,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,OAAKC,UAAU,iBAEbF,IAAAC,cAAA,UAAQC,UAAU,eAAeC,QA9BbuB,KACxBzC,GAAU,KA6BuD,gBAG7De,IAAAC,cAAA,OACE0B,IAAKhC,EAAOzB,MACZ0D,IAAKjC,EAAO1B,MACZiC,UAAU,sBAEZF,IAAAC,cAAA,MAAIC,UAAU,gBAAgBP,EAAO1B,OAhCpCkB,EAGHa,IAAAC,cAAA,OAAKC,UAAU,eACZP,EAAOhB,KAAKkD,IAAI,CAAC/B,EAAKgC,IACrB9B,IAAAC,cAAA,QACEmB,IAAKU,EACL5B,wBACEJ,EAAIC,cAAcgC,SAAS5C,EAAYY,eACnC,gBACA,iBAGLD,KAbgB,MAqCvBE,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,QAAMC,UAAU,aACdF,IAAAC,cAAC+B,IAAK,CAACpB,KAAM,GAAIV,UAAU,cAAc,SAClCP,EAAOvB,UAEhB4B,IAAAC,cAAA,QAAMC,UAAU,aACdF,IAAAC,cAAC+B,IAAK,CAACpB,KAAM,GAAIV,UAAU,cAAc,SAClCP,EAAOtB,UAEhB2B,IAAAC,cAAA,QAAMC,UAAU,aACdF,IAAAC,cAACgC,IAAO,CAACrB,KAAM,GAAIV,UAAU,cAC5BP,EAAOpB,YAEVyB,IAAAC,cAAA,QAAMC,UAAU,aACdF,IAAAC,cAACiC,IAAQ,CAACtB,KAAM,GAAIV,UAAU,cAC7BP,EAAOnB,UAIZwB,IAAAC,cAAA,WAASC,UAAU,kBACjBF,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,MAAIC,UAAU,oBACXP,EAAOlB,YAAYoD,IAAI,CAACM,EAAYL,IACnC9B,IAAAC,cAAA,MAAImB,IAAKU,EAAO5B,UAAU,mBACxBF,IAAAC,cAAA,OAAKC,UAAU,qBAAqB4B,EAAQ,GAC5C9B,IAAAC,cAAA,QAAMC,UAAU,mBAAmBiC,OAM3CnC,IAAAC,cAAA,WAASC,UAAU,kBACjBF,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,MAAIC,UAAU,qBACXP,EAAOjB,aAAamD,IAAI,CAACO,EAAaN,IACrC9B,IAAAC,cAAA,MAAImB,IAAKU,EAAO5B,UAAU,oBACvBkC,OAOXpC,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,QAAMC,UAAU,aAAY,WAASP,EAAOrB,WAE9C0B,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAQC,UAAU,eAChBF,IAAAC,cAACoC,IAAM,CAACzB,KAAM,MAEhBZ,IAAAC,cAAA,UAAQC,UAAU,eAChBF,IAAAC,cAACqC,IAAK,CAAC1B,KAAM,UArGhBZ,IAAAC,cAAA,WAAK,qBCFDsC,MAVf,WACE,MAAMxE,GAAEA,GAAOuD,cAEf,OACEtB,IAAAC,cAAA,WACED,IAAAC,cAACuC,EAAY,CAACC,SAAU1E,IAAM,aCLpC,MAAM2E,EAAiB,CACrB,WAAY,UAAW,UAAW,UAAW,WAAY,SAAU,OACnE,gBAAiB,SAAU,QAAS,UAAW,aAAc,YAC7D,YAAa,UAGTC,EAAoB,CAAC,OAAQ,SAAU,QAEvCC,EAAqB,CACzB,OAAQ,cAAe,YAAa,QAAS,SAAU,SACvD,cAAe,SAAU,QAAS,QAG9BC,EAAcC,MAAMC,KAAK,CAAErC,OAAQ,IAAM,CAACsC,EAAGC,OAAa,GAAJA,UACtDC,EAAiBJ,MAAMC,KAAK,CAAErC,OAAQ,GAAK,CAACsC,EAAGC,IAAMA,EAAI,GAkMzDE,EAAiBC,IAAA,IAACjB,WAAEA,EAAUkB,SAAEA,GAAUD,EAAA,OAC9CpD,IAAAC,cAAA,WACED,IAAAC,cAAA,YAAOkC,EAAWmB,OAAO,IAAEnB,EAAWoB,MAAY,IAACvD,IAAAC,cAAA,YAAOkC,EAAWqB,MACrExD,IAAAC,cAAA,UAAQE,QAASkD,GAAU,YAIzBI,EAAiBC,IAA0D,IAAzDjF,YAAEA,EAAWkF,MAAEA,EAAKN,SAAEA,EAAQT,mBAAEA,GAAoBc,EAC1E,MAAOE,EAAgBC,GAAqBxE,mBAAS,KAC9CyE,EAAkBC,GAAuB1E,mBAAS,KAClD2E,EAAgBC,GAAqB5E,mBAAS,IAE/C6E,EAAiBjD,IACP,UAAVA,EAAEG,MACJuC,EAAM,CAAEH,KAAMI,EAAgBN,OAAQQ,EAAkBP,KAAMS,IAC9DH,EAAkB,IAClBE,EAAoB,IACpBE,EAAkB,MAItB,OACEjE,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEY,KAAK,OACLE,MAAO6C,EACP5C,SAAWC,GAAM4C,EAAkB5C,EAAEC,OAAOH,OAC5CI,UAAW+C,EACXpD,YAAY,oBAEdd,IAAAC,cAAA,SACEY,KAAK,OACLE,MAAO+C,EACP9C,SAAWC,GAAM8C,EAAoB9C,EAAEC,OAAOH,OAC9CI,UAAW+C,EACXpD,YAAY,WAEdd,IAAAC,cAAA,UACEc,MAAOiD,EACPhD,SAAWC,GAAMgD,EAAkBhD,EAAEC,OAAOH,OAC5CI,UAAW+C,GAEXlE,IAAAC,cAAA,UAAQc,MAAM,IAAG,QAChB6B,EAAmBf,IAAI,CAACsC,EAAQrC,IAC/B9B,IAAAC,cAAA,UAAQmB,IAAKU,EAAOf,MAAOoD,GACxBA,KAIPnE,IAAAC,cAAA,UAAQE,QAAS+D,GAAe,kBAC/BzF,EAAYoD,IAAI,CAACM,EAAYL,IAC5B9B,IAAAC,cAACkD,EAAc,CACb/B,IAAKU,EACLK,WAAYA,EACZkB,SAAUA,IAAMA,EAASvB,QAO7BsC,EAAkBC,IAAA,IAACjC,YAAEA,EAAWN,MAAEA,EAAKuB,SAAEA,GAAUgB,EAAA,OACvDrE,IAAAC,cAACqE,IAAS,CAACC,2BAA4BzC,IAASA,MAAOA,GACnD0C,GACAxE,IAAAC,cAAA,MAAAwE,OAAAC,OAAA,CACEC,IAAKH,EAASI,UACVJ,EAASK,eACTL,EAASM,iBAEb9E,IAAAC,cAAA,YAAOmC,GACPpC,IAAAC,cAAA,UAAQE,QAASA,IAAMkD,EAASvB,IAAQ,aAM1CiD,EAAkBC,IAAkD,IAAjDtG,aAAEA,EAAYiF,MAAEA,EAAKN,SAAEA,EAAQ4B,UAAEA,GAAWD,EACnE,MAAOE,EAAYC,GAAiB9F,mBAAS,IAEvC+F,EAAYA,KAChBzB,EAAMuB,EAAWG,QACjBF,EAAc,KAahB,OACEnF,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEY,KAAK,OACLE,MAAOmE,EACPlE,SAAWC,GAAMkE,EAAclE,EAAEC,OAAOH,OACxCI,UAhBiBF,IACP,UAAVA,EAAEG,KACJgE,KAeEtE,YAAY,yBAEdd,IAAAC,cAAA,UAAQE,QAASiF,GAAW,mBAC5BpF,IAAAC,cAACqF,IAAe,CAACC,UAdEC,IACrBP,EAAUO,KAcNxF,IAAAC,cAACwF,IAAS,CAACC,YAAY,gBACnBlB,GACAxE,IAAAC,cAAA,MAAAwE,OAAAC,OAAA,GAASF,EAASmB,eAAc,CAAEhB,IAAKH,EAASI,WAC7ClG,EAAamD,IAAI,CAACO,EAAaN,IAC9B9B,IAAAC,cAACmE,EAAe,CACdhD,mBAAoBU,IACpBA,MAAOA,EACPM,YAAaA,EACbiB,SAAUA,KAGbmB,EAAS1D,iBASlB8E,EAAUC,IAAA,IAAC/F,IAAEA,EAAGuD,SAAEA,GAAUwC,EAAA,OAChC7F,IAAAC,cAAA,WACED,IAAAC,cAAA,YAAOH,GACPE,IAAAC,cAAA,UAAQE,QAASkD,GAAU,YAIzByC,EAAUC,IAA+B,IAA9BpH,KAAEA,EAAIgF,MAAEA,EAAKN,SAAEA,GAAU0C,EACxC,MAAOb,EAAYC,GAAiB9F,mBAAS,IAEvC+F,EAAYA,KAChBzB,EAAMuB,EAAWG,QACjBF,EAAc,KAShB,OACEnF,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEY,KAAK,OACLE,MAAOmE,EACPlE,SAAWC,GAAMkE,EAAclE,EAAEC,OAAOH,OACxCI,UAZiBF,IACP,UAAVA,EAAEG,KACJgE,KAWEtE,YAAY,gBAEdd,IAAAC,cAAA,UAAQE,QAASiF,GAAW,WAC3BzG,EAAKkD,IAAI,CAAC/B,EAAKgC,IACd9B,IAAAC,cAAC2F,EAAO,CACNxE,IAAKU,EACLhC,IAAKA,EACLuD,SAAUA,IAAMA,EAASvB,QAOpBkE,MAvWQC,IAAqB,IAApBC,YAAEA,GAAaD,EACrC,MAAOtG,EAAQwG,GAAa9G,mBAAS,CACnCtB,GAAIC,eACJC,MAAO,GACPC,MAAO,4BACPE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTC,YAAa,GACbC,aAAc,GACdC,KAAM,KAGFyH,EAAgBnF,IACpB,MAAMuC,KAAEA,EAAIzC,MAAEA,GAAUE,EAAEC,OAC1BiF,EAAWE,IAAU,IAChBA,EACHC,CAAC9C,GAAOzC,MA+ENwF,EAAc5G,EAAO1B,OAAS0B,EAAOvB,UAAYuB,EAAOtB,UAAYsB,EAAOrB,UAAYqB,EAAOpB,YAAcoB,EAAOnB,SAAWmB,EAAOlB,YAAYiC,OAAS,GAAKf,EAAOjB,aAAagC,OAAS,EAElM,OACEV,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,QAAMuG,SAvBYvF,IACpBA,EAAEwF,iBACFP,EAAYvG,GACZwG,EAAU,CACRpI,GAAIC,eACJC,MAAO,GACPC,MAAO,4BACPE,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,QAAS,GACTC,YAAa,GACbC,aAAc,GACdC,KAAM,OAWJqB,IAAAC,cAAA,aAAO,OACPD,IAAAC,cAAA,SAAOuD,KAAK,KAAKzC,MAAOpB,EAAO5B,GAAI2I,UAAQ,IAE3C1G,IAAAC,cAAA,aAAO,UACPD,IAAAC,cAAA,SAAOuD,KAAK,QAAQzC,MAAOpB,EAAO1B,MAAO+C,SAAUoF,EAAcO,UAAQ,IAEzE3G,IAAAC,cAAA,aAAO,cACPD,IAAAC,cAAA,UAAQuD,KAAK,WAAWzC,MAAOpB,EAAOvB,SAAU4C,SAAUoF,EAAcO,UAAQ,GAC9E3G,IAAAC,cAAA,UAAQc,MAAM,IAAG,oBAChB8B,EAAYhB,IAAI,CAAC+E,EAAM9E,IACtB9B,IAAAC,cAAA,UAAQmB,IAAKU,EAAOf,MAAO6F,GACxBA,KAKP5G,IAAAC,cAAA,aAAO,cACPD,IAAAC,cAAA,UAAQuD,KAAK,WAAWzC,MAAOpB,EAAOtB,SAAU2C,SAAUoF,EAAcO,UAAQ,GAC9E3G,IAAAC,cAAA,UAAQc,MAAM,IAAG,oBAChB8B,EAAYhB,IAAI,CAAC+E,EAAM9E,IACtB9B,IAAAC,cAAA,UAAQmB,IAAKU,EAAOf,MAAO6F,GACxBA,KAKP5G,IAAAC,cAAA,aAAO,aACPD,IAAAC,cAAA,UAAQuD,KAAK,WAAWzC,MAAOpB,EAAOrB,SAAU0C,SAAUoF,EAAcO,UAAQ,GAC9E3G,IAAAC,cAAA,UAAQc,MAAM,IAAG,mBAChBmC,EAAerB,IAAI,CAACgF,EAAS/E,IAC5B9B,IAAAC,cAAA,UAAQmB,IAAKU,EAAOf,MAAO8F,GACxBA,KAKP7G,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,UAAQuD,KAAK,aAAazC,MAAOpB,EAAOpB,WAAYyC,SAAUoF,EAAcO,UAAQ,GAClF3G,IAAAC,cAAA,UAAQc,MAAM,IAAG,uBAChB4B,EAAkBd,IAAI,CAACsC,EAAQrC,IAC9B9B,IAAAC,cAAA,UAAQmB,IAAKU,EAAOf,MAAOoD,GACxBA,KAKPnE,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,UAAQuD,KAAK,UAAUzC,MAAOpB,EAAOnB,QAASwC,SAAUoF,EAAcO,UAAQ,GAC5E3G,IAAAC,cAAA,UAAQc,MAAM,IAAG,oBAChB2B,EAAeb,IAAI,CAACrD,EAASsD,IAC5B9B,IAAAC,cAAA,UAAQmB,IAAKU,EAAOf,MAAOvC,GACxBA,KAKPwB,IAAAC,cAAA,aAAO,gBACPD,IAAAC,cAACwD,EAAc,CACbhF,YAAakB,EAAOlB,YACpBkF,MA7IqBxB,IAC3BgE,EAAWE,IAAU,IAChBA,EACH5H,YAAa,IAAI4H,EAAW5H,YAAa0D,OA2IrCkB,SAvIwBvB,IAC9BqE,EAAWE,IAAU,IAChBA,EACH5H,YAAa4H,EAAW5H,YAAYqI,OAAO,CAAC9D,EAAGC,IAAMA,IAAMnB,OAqIvDc,mBAAoBA,IAGtB5C,IAAAC,cAAA,aAAO,iBACPD,IAAAC,cAAC8E,EAAe,CACdrG,aAAciB,EAAOjB,aACrBiF,MAvIsBvB,IACxBA,GACF+D,EAAWE,IAAU,IAChBA,EACH3H,aAAc,IAAI2H,EAAW3H,aAAc0D,OAoIzCiB,SA/HyBvB,IAC/BqE,EAAWE,IAAU,IAChBA,EACH3H,aAAc2H,EAAW3H,aAAaoI,OAAO,CAAC9D,EAAGC,IAAMA,IAAMnB,OA6HzDmD,UAzH0BO,IAChC,IAAKA,EAAOuB,YAAa,OACzB,MAAMC,EAAQlE,MAAMC,KAAKpD,EAAOjB,eACzBuI,GAAiBD,EAAME,OAAO1B,EAAO2B,OAAOrF,MAAO,GAC1DkF,EAAME,OAAO1B,EAAOuB,YAAYjF,MAAO,EAAGmF,GAC1Cd,EAAWE,IAAU,IAChBA,EACH3H,aAAcsI,QAqHZhH,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAC6F,EAAO,CACNnH,KAAMgB,EAAOhB,KACbgF,MApHc7D,IAChBA,GACFqG,EAAWE,IAAU,IAChBA,EACH1H,KAAM,IAAI0H,EAAW1H,KAAMmB,OAiHzBuD,SA5GiBvB,IACvBqE,EAAWE,IAAU,IAChBA,EACH1H,KAAM0H,EAAW1H,KAAKmI,OAAO,CAAC9D,EAAGC,IAAMA,IAAMnB,SA4G3C9B,IAAAC,cAAA,UAAQY,KAAK,SAASuG,UAAWb,GAAa,uBCzLvCc,MAhBGA,KAChB,MAAOvJ,EAASwJ,GAAcjI,mBAAS,IAMvC,OACEW,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAC+F,EAAc,CAACE,YAPDqB,IACjBD,EAAW,IAAIxJ,EAASyJ,SCYbC,MAdf,WACE,OACExH,IAAAC,cAACwH,IAAM,KACLzH,IAAAC,cAACyH,IAAM,KACL1H,IAAAC,cAAC0H,IAAK,CAACC,KAAK,IAAIC,QAAS7H,IAAAC,cAACjB,EAAI,QAC9BgB,IAAAC,cAAC0H,IAAK,CAACC,KAAK,WAAWC,QAAS7H,IAAAC,cAACsC,EAAU,OACzCvC,IAAAC,cAAC0H,IAAK,CAACC,KAAK,MAAMC,QAAS7H,IAAAC,cAACsC,EAAU,SAExCvC,IAAAC,cAAC0H,IAAK,CAACC,KAAK,SAASC,QAAS7H,IAAAC,cAACoH,EAAS,WCFjCS,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCpK,EAAAqD,EAAA,GAAAgH,KAAArK,EAAAsK,KAAA,UAAqBD,KAAKhC,IAAiD,IAAhDkC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAStC,EACpEkC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5I,IAAAC,cAACD,IAAM6I,WAAU,KACf7I,IAAAC,cAACuH,EAAG,QAORM","file":"static/js/main.73454fe1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spaghetti-bolognese.9811b06e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thai-green-curry.654db623.jpg\";","module.exports = __webpack_public_path__ + \"static/media/french-onion-soup.fc37e60d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/margherita-pizza.482d4d10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beef-broccoli.65cac053.jpg\";","// src/components/RecipeList.js\nimport SpeghettiBolognese from './images/spaghetti-bolognese.jpg';\nimport ThaiGreenCurry from './images/thai-green-curry.jpg';\nimport ClassicFrenchOnionSoup from './images/french-onion-soup.jpg';\nimport HomemadeMargheritaPizza from './images/margherita-pizza.jpg';\nimport BeefandBroccoliStirFry from './images/beef-broccoli.jpg';\nimport { v4 as uuidv4 } from 'uuid';\n\n// src/data/recipeData.js\n\nconst recipes = [\n  {\n    id: uuidv4(),\n    title: 'Spaghetti Bolognese',\n    image: SpeghettiBolognese,\n    prepTime: '15 mins',\n    cookTime: '45 mins',\n    servings: 4,\n    difficulty: 'Easy',\n    cuisine: 'Italian',\n    ingredients: [\n      '400g spaghetti',\n      '500g ground beef',\n      '2 cans crushed tomatoes',\n      '1 large onion, finely chopped',\n      '3 cloves garlic, minced',\n      '2 carrots, diced',\n      '2 celery stalks, diced',\n      '2 tbsp olive oil',\n      '1 tbsp dried oregano',\n      '1 tbsp dried basil',\n      'Salt and pepper to taste',\n      'Grated Parmesan cheese for serving'\n    ],\n    instructions: [\n      'Heat olive oil in a large pot over medium heat',\n      'Add onion, carrots, and celery. Cook until softened, about 5 minutes',\n      'Add garlic and cook for another minute',\n      'Add ground beef and cook until browned, breaking up any lumps',\n      'Stir in crushed tomatoes, oregano, and basil',\n      'Simmer for 30 minutes, stirring occasionally',\n      'Meanwhile, cook spaghetti according to package instructions',\n      'Season sauce with salt and pepper to taste',\n      'Serve sauce over spaghetti with grated Parmesan'\n    ],\n    tags: [\n      'pasta',\n      'spaghetti',\n      'meat',\n      'beef',\n      'pork',\n      'tomato',\n      'sauce',\n      'bolognese',\n      'ragu',\n      'dinner',\n      'lunch',\n      'family meal',\n      'comfort food',\n      'italian',\n      'italian cuisine',\n      'easy recipe',\n      'weeknight dinner',\n      'weekend meal',\n      'kid-friendly',\n      'gluten-free',\n      'dairy-free',\n      'vegetarian',\n      'vegan',\n      'spicy',\n      'mild',\n      'flavorful',\n      'hearty',\n      'savory',\n      'homemade',\n      'fresh ingredients',\n      'slow cooker',\n      'instant pot',\n      'stovetop',\n      'oven-baked',\n      'party food',\n      'potluck',\n      'leftovers',\n      'freezer-friendly',\n      'budget-friendly',\n      'gourmet',\n      'classic',\n      'traditional',\n      'modern',\n      'fusion',\n      'healthy',\n      'nutritious',\n      'low-carb',\n      'high-protein',\n      'keto',\n      'paleo',\n      'whole30',\n      'pescatarian',\n      'plant-based',\n      'gluten-free pasta',\n      'zucchini noodles',\n      'shirataki noodles',\n      'cauliflower rice',\n      'vegan cheese',\n      'dairy-free cheese'\n    ]\n  },\n  {\n    id: uuidv4(),\n    title: 'Thai Green Curry',\n    image: ThaiGreenCurry,\n    prepTime: '20 mins',\n    cookTime: '30 mins',\n    servings: 4,\n    difficulty: 'Medium',\n    cuisine: 'Thai',\n    ingredients: [\n      '400g chicken breast, sliced',\n      '2 cans coconut milk',\n      '3 tbsp green curry paste',\n      '2 bell peppers, sliced',\n      '1 cup bamboo shoots',\n      '1 cup snap peas',\n      'Fish sauce to taste',\n      'Palm sugar to taste',\n      'Thai basil leaves',\n      'Jasmine rice for serving'\n    ],\n    instructions: [\n      'Heat coconut milk in a large pan until it starts to bubble',\n      'Add green curry paste and stir until fragrant',\n      'Add chicken and cook until no longer pink',\n      'Add vegetables and simmer until tender',\n      'Season with fish sauce and palm sugar',\n      'Garnish with Thai basil leaves',\n      'Serve hot with jasmine rice'\n    ],\n    tags: [\n      'thai',\n      'thai cuisine',\n      'curry',\n      'green curry',\n      'spicy',\n      'flavorful',\n      'coconut milk',\n      'vegetable',\n      'protein',\n      'chicken',\n      'beef',\n      'pork',\n      'shrimp',\n      'tofu',\n      'vegetable curry',\n      'dinner',\n      'lunch',\n      'weeknight meal',\n      'weekend meal',\n      'easy recipe',\n      'quick recipe',\n      'healthy',\n      'nutritious',\n      'gluten-free',\n      'dairy-free',\n      'vegan',\n      'vegetarian',\n      'hot',\n      'medium',\n      'mild',\n      'aromatic',\n      'fresh herbs',\n      'ginger',\n      'garlic',\n      'chili pepper',\n      'kaffir lime leaves',\n      'lemongrass',\n      'fish sauce',\n      'soy sauce',\n      'rice',\n      'noodles',\n      'stir-fry',\n      'soup',\n      'stew',\n      'comfort food',\n      'exotic',\n      'authentic',\n      'fusion',\n      'budget-friendly',\n      'gourmet',\n      'party food',\n      'potluck',\n      'leftovers',\n      'freezer-friendly'\n  ]\n  },\n  {\n    id: uuidv4(),\n    title: 'Classic French Onion Soup',\n    image: ClassicFrenchOnionSoup,\n    prepTime: '15 mins',\n    cookTime: '1 hour 15 mins',\n    servings: 6,\n    difficulty: 'Medium',\n    cuisine: 'French',\n    ingredients: [\n      '6 large onions, thinly sliced',\n      '4 tbsp butter',\n      '2 tbsp olive oil',\n      '1 tsp sugar',\n      '2 cloves garlic, minced',\n      '8 cups beef broth',\n      '1/2 cup dry white wine',\n      '1 bay leaf',\n      '4 sprigs fresh thyme',\n      'Baguette slices',\n      'Gruyere cheese, grated',\n      'Salt and pepper to taste'\n    ],\n    instructions: [\n      'In a large pot, melt butter with olive oil over medium heat',\n      'Add sliced onions and sugar, cook until deeply caramelized (45 mins)',\n      'Add garlic and cook for 1 minute',\n      'Pour in wine and scrape up any browned bits',\n      'Add beef broth, bay leaf, and thyme',\n      'Simmer for 30 minutes',\n      'Toast baguette slices',\n      'Ladle soup into oven-safe bowls',\n      'Top with toasted bread and cheese',\n      'Broil until cheese is bubbly and golden'\n    ],\n    tags: [\n      'french',\n      'french cuisine',\n      'soup',\n      'onion soup',\n      'french onion soup',\n      'comfort food',\n      'winter food',\n      'cozy',\n      'warm',\n      'hearty',\n      'savory',\n      'caramelized onion',\n      'cheese',\n      'gruyère',\n      'baguette',\n      'crouton',\n      'broth',\n      'beef broth',\n      'chicken broth',\n      'vegetable broth',\n      'garlic',\n      'thyme',\n      'bay leaf',\n      'black pepper',\n      'easy recipe',\n      'weeknight dinner',\n      'weekend meal',\n      'gluten-free',\n      'dairy-free',\n      'vegetarian',\n      'vegan',\n      'low-carb',\n      'keto',\n      'paleo',\n      'whole30',\n      'party food',\n      'potluck',\n      'leftovers',\n      'freezer-friendly',\n      'classic',\n      'traditional',\n      'elegant',\n      'gourmet'\n  ]\n  },\n  {\n    id: uuidv4(),\n    title: 'Homemade Margherita Pizza',\n    image: HomemadeMargheritaPizza,\n    prepTime: '30 mins',\n    cookTime: '15 mins',\n    servings: 2,\n    difficulty: 'Medium',\n    cuisine: 'Italian',\n    ingredients: [\n      '300g pizza dough',\n      '200g San Marzano tomatoes',\n      '200g fresh mozzarella',\n      'Fresh basil leaves',\n      'Extra virgin olive oil',\n      'Salt to taste'\n    ],\n    instructions: [\n      'Preheat oven to highest setting with pizza stone inside',\n      'Stretch dough into a 12-inch circle',\n      'Spread crushed tomatoes leaving a border',\n      'Tear mozzarella and distribute evenly',\n      'Slide pizza onto hot stone',\n      'Bake until crust is charred and cheese is bubbling',\n      'Top with fresh basil and drizzle with olive oil'\n    ],\n    tags: [\n      'pizza',\n      'margherita pizza',\n      'italian',\n      'italian cuisine',\n      'homemade',\n      'pizza dough',\n      'tomato sauce',\n      'mozzarella cheese',\n      'basil',\n      'olive oil',\n      'garlic',\n      'oregano',\n      'dinner',\n      'lunch',\n      'weeknight meal',\n      'weekend meal',\n      'family meal',\n      'party food',\n      'easy recipe',\n      'kid-friendly',\n      'gluten-free',\n      'dairy-free',\n      'vegan',\n      'vegetarian',\n      'healthy',\n      'nutritious',\n      'low-carb',\n      'keto',\n      'paleo',\n      'whole30',\n      'fresh ingredients',\n      'oven-baked',\n      'crispy crust',\n      'cheesy',\n      'flavorful',\n      'authentic',\n      'classic',\n      'traditional',\n      'modern',\n      'fusion',\n      'budget-friendly',\n      'gourmet'\n  ]\n  },\n  {\n    id: uuidv4(),\n    title: 'Beef and Broccoli Stir-Fry',\n    image: BeefandBroccoliStirFry,\n    prepTime: '20 mins',\n    cookTime: '15 mins',\n    servings: 4,\n    difficulty: 'Easy',\n    cuisine: 'Chinese',\n    ingredients: [\n      '500g flank steak, sliced',\n      '2 cups broccoli florets',\n      '3 tbsp soy sauce',\n      '2 tbsp oyster sauce',\n      '1 tbsp cornstarch',\n      '2 cloves garlic, minced',\n      '1 tbsp ginger, minced',\n      'Sesame oil',\n      'White rice for serving'\n    ],\n    instructions: [\n      'Marinate beef in soy sauce, cornstarch for 15 minutes',\n      'Blanch broccoli in boiling water for 2 minutes',\n      'Heat wok over high heat',\n      'Stir-fry beef until browned',\n      'Add garlic and ginger',\n      'Add broccoli and sauces',\n      'Stir-fry until heated through',\n      'Drizzle with sesame oil',\n      'Serve over rice'\n    ],\n    tags: [\n      'stir-fry',\n      'chinese',\n      'chinese cuisine',\n      'beef',\n      'broccoli',\n      'vegetable',\n      'soy sauce',\n      'oyster sauce',\n      'cornstarch',\n      'garlic',\n      'ginger',\n      'sesame oil',\n      'dinner',\n      'lunch',\n      'weeknight meal',\n      'quick recipe',\n      'easy recipe',\n      'healthy',\n      'nutritious',\n      'gluten-free',\n      'dairy-free',\n      'low-carb',\n      'keto',\n      'paleo',\n      'whole30',\n      'fresh ingredients',\n      'wok',\n      'skillet',\n      'flavorful',\n      'savory',\n      'umami',\n      'authentic',\n      'fusion',\n      'budget-friendly',\n      'gourmet',\n      'leftovers',\n      'freezer-friendly'\n  ]\n  }\n];\n\nexport default recipes;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Home.css';\nimport { Search } from 'lucide-react';\nimport recipes from '../../components/RecipeList/RecipeList';\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleGenerateMeal = () => {\n    const allRecipes = recipes;\n    const randomIndex = Math.floor(Math.random() * allRecipes.length);\n    const randomRecipe = allRecipes[randomIndex];\n    const randomId = randomRecipe.id; // Assuming each recipe has a 'id' field with a UUID value\n    navigate(`/recipes/${randomId}`);\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSearch = () => {\n    const words = searchQuery.split(' ');\n\n    // Find the first recipe where any tag matches any word in the query\n    const matchingRecipe = recipes.find(recipe =>\n      words.some(word =>\n        recipe.tags.some(tag => tag.toLowerCase() === word)\n      )\n    );\n\n    // Navigate to matching recipe or default to ID 1 if no match is found\n    if (matchingRecipe) {\n      navigate(`/recipes/${matchingRecipe.id}`);\n    }\n\n    setSearchQuery(''); // Clear the search after navigation\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"home-container\">\n      <header className=\"home-header\">\n        <h1>TasteFinder.</h1>\n        <p>Feed your soul, one bite at a time.</p>\n      </header>\n\n      <div className=\"home-button-section\">\n        <button className=\"generate-meal-button\" onClick={handleGenerateMeal}>\n          Roll the Dice, Dine Delightfully\n        </button>\n      </div>\n\n      <footer className=\"home-footer\">\n        <div className=\"search-bar\">\n          <Search \n            className=\"search-icon\" \n            size={20} \n            onClick={handleSearch} // Trigger search on icon click\n          />\n          <input \n            type=\"text\" \n            placeholder=\"Explore:\" \n            value={searchQuery}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown} // Trigger search on Enter key press\n            className=\"w-full\"\n          />\n          <button className=\"filters-button\">Search Filters</button>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport './RecipeDetails.css'; // Import the CSS file\nimport { Share2, Heart, Clock, ChefHat, Utensils } from 'lucide-react';\nimport recipes from '../RecipeList/RecipeList'; // Import the recipes array\n\nfunction RecipeDetails() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get('search');\n\n  // Find the recipe with the matching ID from the static data\n  const recipe = recipes.find((recipe) => recipe.id === id);\n\n  // If no recipe is found, you can display an error or a message\n  if (!recipe) {\n    return <div>Recipe not found</div>;\n  }\n\n  // Function to handle generating a random recipe ID and navigation\n  const handleCloseButton = () => {\n    navigate(-1);\n  };\n\n  // Function to highlight matching tags\n  const renderTags = () => {\n    if (!searchQuery) return null;\n\n    return (\n      <div className=\"recipe-tags\">\n        {recipe.tags.map((tag, index) => (\n          <span \n            key={index}\n            className={`recipe-tag ${\n              tag.toLowerCase().includes(searchQuery.toLowerCase()) \n                ? 'bg-yellow-200' \n                : 'bg-gray-100'\n            }`}\n          >\n            {tag}\n          </span>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"recipe-container\">\n      <div className=\"recipe-header\">\n        {/* Close button */}\n        <button className=\"close-button\" onClick={handleCloseButton}>\n          TasteFinder.\n        </button>\n        <img \n          src={recipe.image} \n          alt={recipe.title}\n          className=\"recipe-hero-image\"\n        />\n        <h1 className=\"recipe-title\">{recipe.title}</h1>\n        {/* Display tags if there was a search query */}\n        {renderTags()}\n      </div>\n\n      <div className=\"recipe-content\">\n        <div className=\"recipe-info\">\n          <span className=\"info-item\">\n            <Clock size={16} className=\"info-icon\" />\n            Prep: {recipe.prepTime}\n          </span>\n          <span className=\"info-item\">\n            <Clock size={16} className=\"info-icon\" />\n            Cook: {recipe.cookTime}\n          </span>\n          <span className=\"info-item\">\n            <ChefHat size={16} className=\"info-icon\" />\n            {recipe.difficulty}\n          </span>\n          <span className=\"info-item\">\n            <Utensils size={16} className=\"info-icon\" />\n            {recipe.cuisine}\n          </span>\n        </div>\n\n        <section className=\"recipe-section\">\n          <h2>Ingredients</h2>\n          <ul className=\"ingredients-list\">\n            {recipe.ingredients.map((ingredient, index) => (\n              <li key={index} className=\"ingredient-item\">\n                <div className=\"ingredient-number\">{index + 1}</div>\n                <span className=\"ingredient-text\">{ingredient}</span>\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <section className=\"recipe-section\">\n          <h2>Instructions</h2>\n          <div className=\"instructions\">\n            <ol className=\"instructions-list\">\n              {recipe.instructions.map((instruction, index) => (\n                <li key={index} className=\"instruction-item\">\n                  {instruction}\n                </li>\n              ))}\n            </ol>\n          </div>\n        </section>\n\n        <div className=\"recipe-footer\">\n          <div className=\"recipe-meta\">\n            <span className=\"meta-item\">Serves: {recipe.servings}</span>\n          </div>\n          <div className=\"action-buttons\">\n            <button className=\"icon-button\">\n              <Share2 size={18} />\n            </button>\n            <button className=\"icon-button\">\n              <Heart size={18} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeDetails;","// src/pages/RecipePage/RecipePage.js\nimport React from 'react';\nimport { useParams } from 'react-router-dom'; // Use this to get the recipe ID from the URL\nimport RecipeDetail from '../../components/RecipeDetail/RecipeDetail'; // This will be a reusable component for recipe details\n\nfunction RecipePage() {\n  const { id } = useParams(); // Retrieve recipe ID for fetching or displaying the correct recipe\n\n  return (\n    <div>\n      <RecipeDetail recipeId={id} /> {/* Pass down the recipe ID */}\n    </div>\n  );\n}\n\nexport default RecipePage;\n","// AdminAddRecipe.js\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst cuisineOptions = [\n  'American', 'Italian', 'Chinese', 'Mexican', 'Japanese', 'Indian', 'Thai', \n  'Mediterranean', 'French', 'Greek', 'Spanish', 'Vietnamese', 'Brazilian', \n  'Caribbean', 'Korean'\n];\n\nconst difficultyOptions = ['Easy', 'Medium', 'Hard'];\n\nconst measurementOptions = [\n  'cups', 'tablespoons', 'teaspoons', 'grams', 'ounces', 'pounds', \n  'milliliters', 'liters', 'pinch', 'dash'\n];\n\nconst timeOptions = Array.from({ length: 49 }, (_, i) => `${i * 15} mins`);\nconst servingOptions = Array.from({ length: 8 }, (_, i) => i + 1);\n\nconst AdminAddRecipe = ({ onAddRecipe }) => {\n  const [recipe, setRecipe] = useState({\n    id: uuidv4(),\n    title: '',\n    image: '/default-recipe-image.jpg',\n    prepTime: '',\n    cookTime: '',\n    servings: '',\n    difficulty: '',\n    cuisine: '',\n    ingredients: [],\n    instructions: [],\n    tags: [],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setRecipe((prevRecipe) => ({\n      ...prevRecipe,\n      [name]: value,\n    }));\n  };\n\n  const handleIngredientAdd = (ingredient) => {\n    setRecipe((prevRecipe) => ({\n      ...prevRecipe,\n      ingredients: [...prevRecipe.ingredients, ingredient],\n    }));\n  };\n\n  const handleIngredientRemove = (index) => {\n    setRecipe((prevRecipe) => ({\n      ...prevRecipe,\n      ingredients: prevRecipe.ingredients.filter((_, i) => i !== index),\n    }));\n  };\n\n  const handleInstructionAdd = (instruction) => {\n    if (instruction) {\n      setRecipe((prevRecipe) => ({\n        ...prevRecipe,\n        instructions: [...prevRecipe.instructions, instruction],\n      }));\n    }\n  };\n\n  const handleInstructionRemove = (index) => {\n    setRecipe((prevRecipe) => ({\n      ...prevRecipe,\n      instructions: prevRecipe.instructions.filter((_, i) => i !== index),\n    }));\n  };\n\n  const handleInstructionReorder = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(recipe.instructions);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setRecipe((prevRecipe) => ({\n      ...prevRecipe,\n      instructions: items,\n    }));\n  };\n\n  const handleTagAdd = (tag) => {\n    if (tag) {\n      setRecipe((prevRecipe) => ({\n        ...prevRecipe,\n        tags: [...prevRecipe.tags, tag],\n      }));\n    }\n  };\n\n  const handleTagRemove = (index) => {\n    setRecipe((prevRecipe) => ({\n      ...prevRecipe,\n      tags: prevRecipe.tags.filter((_, i) => i !== index),\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onAddRecipe(recipe);\n    setRecipe({\n      id: uuidv4(),\n      title: '',\n      image: '/default-recipe-image.jpg',\n      prepTime: '',\n      cookTime: '',\n      servings: '',\n      difficulty: '',\n      cuisine: '',\n      ingredients: [],\n      instructions: [],\n      tags: [],\n    });\n  };\n\n  const isFormValid = recipe.title && recipe.prepTime && recipe.cookTime && recipe.servings && recipe.difficulty && recipe.cuisine && recipe.ingredients.length > 0 && recipe.instructions.length > 0;\n\n  return (\n    <div>\n      <h2>Add New Recipe</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Input fields */}\n        <label>ID:</label>\n        <input name=\"id\" value={recipe.id} readOnly />\n\n        <label>Title:</label>\n        <input name=\"title\" value={recipe.title} onChange={handleChange} required />\n\n        <label>Prep Time:</label>\n        <select name=\"prepTime\" value={recipe.prepTime} onChange={handleChange} required>\n          <option value=\"\">Select prep time</option>\n          {timeOptions.map((time, index) => (\n            <option key={index} value={time}>\n              {time}\n            </option>\n          ))}\n        </select>\n\n        <label>Cook Time:</label>\n        <select name=\"cookTime\" value={recipe.cookTime} onChange={handleChange} required>\n          <option value=\"\">Select cook time</option>\n          {timeOptions.map((time, index) => (\n            <option key={index} value={time}>\n              {time}\n            </option>\n          ))}\n        </select>\n\n        <label>Servings:</label>\n        <select name=\"servings\" value={recipe.servings} onChange={handleChange} required>\n          <option value=\"\">Select servings</option>\n          {servingOptions.map((serving, index) => (\n            <option key={index} value={serving}>\n              {serving}\n            </option>\n          ))}\n        </select>\n\n        <label>Difficulty:</label>\n        <select name=\"difficulty\" value={recipe.difficulty} onChange={handleChange} required>\n          <option value=\"\">Select a difficulty</option>\n          {difficultyOptions.map((option, index) => (\n            <option key={index} value={option}>\n              {option}\n            </option>\n          ))}\n        </select>\n\n        <label>Cuisine:</label>\n        <select name=\"cuisine\" value={recipe.cuisine} onChange={handleChange} required>\n          <option value=\"\">Select a cuisine</option>\n          {cuisineOptions.map((cuisine, index) => (\n            <option key={index} value={cuisine}>\n              {cuisine}\n            </option>\n          ))}\n        </select>\n\n        <label>Ingredients:</label>\n        <IngredientList\n          ingredients={recipe.ingredients}\n          onAdd={handleIngredientAdd}\n          onRemove={handleIngredientRemove}\n          measurementOptions={measurementOptions}\n        />\n\n        <label>Instructions:</label>\n        <InstructionList\n          instructions={recipe.instructions}\n          onAdd={handleInstructionAdd}\n          onRemove={handleInstructionRemove}\n          onReorder={handleInstructionReorder}\n        />\n\n        <label>Tags:</label>\n        <TagList\n          tags={recipe.tags}\n          onAdd={handleTagAdd}\n          onRemove={handleTagRemove}\n        />\n\n        <button type=\"submit\" disabled={!isFormValid}>\n          Add Recipe\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst IngredientItem = ({ ingredient, onRemove }) => (\n  <div>\n    <span>{ingredient.amount} {ingredient.unit}</span> <span>{ingredient.name}</span>\n    <button onClick={onRemove}>Remove</button>\n  </div>\n);\n\nconst IngredientList = ({ ingredients, onAdd, onRemove, measurementOptions }) => {\n  const [ingredientName, setIngredientName] = useState('');\n  const [ingredientAmount, setIngredientAmount] = useState('');\n  const [ingredientUnit, setIngredientUnit] = useState('');\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      onAdd({ name: ingredientName, amount: ingredientAmount, unit: ingredientUnit });\n      setIngredientName('');\n      setIngredientAmount('');\n      setIngredientUnit('');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={ingredientName}\n        onChange={(e) => setIngredientName(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Ingredient name\"\n      />\n      <input\n        type=\"text\"\n        value={ingredientAmount}\n        onChange={(e) => setIngredientAmount(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Amount\"\n      />\n      <select\n        value={ingredientUnit}\n        onChange={(e) => setIngredientUnit(e.target.value)}\n        onKeyDown={handleKeyDown}\n      >\n        <option value=\"\">Unit</option>\n        {measurementOptions.map((option, index) => (\n          <option key={index} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n      <button onClick={handleKeyDown}>Add Ingredient</button>\n      {ingredients.map((ingredient, index) => (\n        <IngredientItem\n          key={index}\n          ingredient={ingredient}\n          onRemove={() => onRemove(index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst InstructionItem = ({ instruction, index, onRemove }) => (\n  <Draggable draggableId={`instruction-${index}`} index={index}>\n    {(provided) => (\n      <div\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n      >\n        <span>{instruction}</span>\n        <button onClick={() => onRemove(index)}>Remove</button>\n      </div>\n    )}\n  </Draggable>\n);\n\nconst InstructionList = ({ instructions, onAdd, onRemove, onReorder }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleAdd = () => {\n    onAdd(inputValue.trim());\n    setInputValue('');\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleAdd();\n    }\n  };\n\n  const handleDragEnd = (result) => {\n    onReorder(result);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Enter an instruction\"\n      />\n      <button onClick={handleAdd}>Add Instruction</button>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"instructions\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {instructions.map((instruction, index) => (\n                <InstructionItem\n                  key={`instruction-${index}`}\n                  index={index}\n                  instruction={instruction}\n                  onRemove={onRemove}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nconst TagItem = ({ tag, onRemove }) => (\n  <div>\n    <span>{tag}</span>\n    <button onClick={onRemove}>Remove</button>\n  </div>\n);\n\nconst TagList = ({ tags, onAdd, onRemove }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleAdd = () => {\n    onAdd(inputValue.trim());\n    setInputValue('');\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleAdd();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Enter a tag\"\n      />\n      <button onClick={handleAdd}>Add Tag</button>\n      {tags.map((tag, index) => (\n        <TagItem\n          key={index}\n          tag={tag}\n          onRemove={() => onRemove(index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default AdminAddRecipe;","import React, { useState } from 'react';\nimport AdminAddRecipe from '../../components/Admin/AdminAddRecipe';\nimport './Admin.css';\n\nconst AdminPage = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  const addRecipe = (newRecipe) => {\n    setRecipes([...recipes, newRecipe]);\n  };\n\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n      <AdminAddRecipe onAddRecipe={addRecipe} />\n      {/* You could render recipes or manage them here */}\n    </div>\n  );\n};\n\nexport default AdminPage;\n","import React from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport RecipePage from './pages/RecipePage/RecipePage';\nimport AdminPage from './pages/Admin/Admin';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/recipes\" element={<RecipePage />}>\n          <Route path=\":id\" element={<RecipePage />} />\n        </Route>\n        <Route path=\"/admin\" element={<AdminPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}